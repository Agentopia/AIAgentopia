{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Manifest Schema",
  "type": "object",
  "required": [
    "name", "description", "category", "agentType", "agentScale", "features",
    "tags", "version", "author", "entry_point",
    "long_description", "use_cases", "docker_image_name", "docker_run_instructions", "llm_dependency"
  ],
  "properties": {
    "name": { "type": "string", "description": "Unique agent name" },
    "description": { "type": "string", "description": "A brief, one-sentence summary of the agent's primary function. For a more detailed explanation, use 'long_description'." },
    "long_description": {
      "type": "string",
      "description": "A detailed description of the agent, its purpose, capabilities, and primary use cases. Supports Markdown for rich formatting. This will be used for the main overview section on the agent detail page."
    },
    "use_cases": {
      "type": "array",
      "items": { "type": "string" },
      "description": "A list of specific use cases or problems that this agent is designed to solve. Each item should be a concise description of a use case.",
      "default": []
    },
    "category": {
      "type": "string",
      "enum": ["Productivity & Organization", "Content Creation & Design", "Data Analysis & Research", "Automation & Utilities", "Education & Learning", "Business & Finance"],
      "description": "Primary functional or domain-oriented category for the agent."
    },
    "subcategory": {
      "type": "string",
      "description": "Optional sub-category for more granular functional classification (e.g., 'Task Management' under 'Productivity & Organization')."
    },
    "agentType": {
      "type": "string",
      "enum": ["Assistant", "Autonomous", "Hybrid"],
      "description": "Describes the agent's primary operational mode: Assistant (user-directed), Autonomous (self-directed), or Hybrid (mixed-initiative)."
    },
    "agentScale": {
      "type": "string",
      "enum": ["Single-Agent", "Multi-Agent"],
      "description": "Describes the structural complexity: Single-Agent (operates individually) or Multi-Agent (part of a coordinated team or system)."
    },
    "developmentFrameworks": {
      "type": "array",
      "items": { "type": "string" },
      "description": "List of development frameworks, libraries, or SDKs used (e.g., LangChain, AutoGen, OpenAI API).",
      "default": []
    },
    "intendedAudience": {
      "type": "array",
      "items": { "type": "string" },
      "description": "Specifies the primary target users for this agent (e.g., Developers, Marketers, Researchers, General Users).",
      "default": []
    },
    "dataModalities": {
      "type": "array",
      "items": { "type": "string" },
      "description": "List of data modalities the agent primarily works with (e.g., Text, Image, Tabular Data, Code).",
      "default": []
    },
    "integrationType": {
      "type": "string",
      "description": "How the agent is typically used or deployed (e.g., Standalone, API-based, CLI tool, Browser Extension)."
    },
    "features": {
      "type": "array",
      "items": { "type": "string" },
      "minItems": 1,
      "description": "A list of key features the agent currently possesses."
    },
    "roadmap_features": {
      "type": "array",
      "items": { "type": "string" },
      "description": "A list of features or enhancements planned for future versions of this agent. Helps users understand the agent's development trajectory.",
      "default": []
    },
    "tags": {
      "type": "array",
      "items": { "type": "string" },
      "minItems": 1
    },
    "version": { "type": "string", "description": "Agent version" },
    "author": { "type": "string", "description": "Author or maintainer" },
    "deployment_status": {
      "type": "string",
      "description": "Indicates the current readiness state of the agent for deployment and visibility on the portal.",
      "enum": ["development", "review", "production"],
      "default": "development"
    },
    "entry_point": { "type": "string", "description": "Main script/module" },
    "setup_instructions": { "type": "string", "description": "General introductory setup notes or prerequisites. Detailed Docker execution instructions should go into 'docker_run_instructions'. Supports Markdown.", "default": "" },
    "requirements": {
      "type": "array",
      "items": { "type": "string" },
      "default": []
    },
    "docker_image_name": {
      "type": "string",
      "description": "The full name of the Docker image for this agent, including any namespace and tag (e.g., 'agentopia/data-analyzer-bot:latest' or 'yourusername/youragent:1.0')."
    },
    "docker_pull_instructions": {
      "type": "string",
      "description": "Specific command or brief instructions for pulling the Docker image. Defaults to 'docker pull [docker_image_name]' if not provided, but can be overridden for special cases. Supports Markdown.",
      "default": ""
    },
    "docker_run_instructions": {
      "type": "string",
      "description": "Detailed instructions and example commands for running the agent via Docker. Should cover essential aspects like volume mounting for data, port mapping if the agent has a web UI, and passing necessary environment variables (e.g., for API keys). Supports Markdown. This is a critical field for user setup."
    },
    "llm_dependency": {
      "type": "object",
      "description": "Describes if and how the agent utilizes Large Language Models (LLMs). Essential for transparency regarding external service use and user configuration requirements.",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["openai", "anthropic", "google", "cohere", "local_api", "huggingface_api", "none"],
          "description": "Specifies the type of LLM or LLM provider the agent is designed to work with. 'none' if no LLM is used."
        },
        "apiKeyEnvVar": {
          "type": "string",
          "description": "The name of the environment variable the agent expects for the LLM API key (e.g., 'OPENAI_API_KEY'). Required if 'type' is a cloud provider."
        },
        "apiEndpointEnvVar": {
          "type": "string",
          "description": "The name of the environment variable the agent expects for the LLM API endpoint URL. Useful for 'local_api' or self-hosted models."
        },
        "modelRecommendation": {
          "type": "string",
          "description": "A recommended model or family of models that work well with this agent (e.g., 'gpt-4o-mini', 'claude-3-opus', 'ollama/llama3')."
        },
        "notes": {
          "type": "string",
          "description": "Additional notes regarding LLM setup, such as specific API requirements, version compatibility, or guidance on choosing models. Supports Markdown.",
          "default": ""
        }
      },
      "required": ["type"]
    },
    "privacy_considerations": {
      "type": "string",
      "description": "A dedicated section for the agent developer to explicitly state how the agent handles data, its privacy implications, and any security notes. Reinforces Agentopia's commitment to user privacy. Supports Markdown.",
      "default": ""
    },
    "config_fields": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "label", "type"],
        "properties": {
          "name": { "type": "string" },
          "label": { "type": "string" },
          "type": { "type": "string", "enum": ["text", "password", "number", "select"] },
          "required": { "type": "boolean", "default": false }
        }
      },
      "default": [],
      "description": "Defines configuration options for the agent. These often translate to environment variables for Docker containers or settings for local scripts. Used to inform users about how to configure the agent during setup (e.g., via 'docker run -e VAR=value')."
    },
    "demo_url": { "type": "string", "format": "uri", "default": "", "description": "URL to an interactive online demo (e.g., Hugging Face Space). It should be clearly communicated that online demos are for illustrative purposes with non-sensitive data; for private data, the local Docker version must be used." },
    "source_url": { "type": "string", "format": "uri", "default": "", "description": "URL to the agent's source code or a primary source code exploration resource (e.g., GitHub repository, Google Colab notebook)." },
    "icon": { "type": "string", "default": "" }
  }
}
